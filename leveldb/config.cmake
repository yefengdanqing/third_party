INCLUDE(ExternalProject)

set(LEVELDB_INSTALL_DIR "${PROJECT_BINARY_DIR}/third_party/leveldb")
set(LEVELDB_INCLUDE_DIR "${LEVELDB_INSTALL_DIR}/include" CACHE PATH "leveldb include directory." FORCE)
set(LEVELDB_LIBRARIES   "${LEVELDB_INSTALL_DIR}/lib/libleveldb.a" CACHE FILEPATH "LEVELDB_LIBRARIES" FORCE)

include_directories(SYSTEM ${LEVELDB_INCLUDE_DIR})

set(LEVELDB_VERSION "leveldb-1.22")
execute_process(
    COMMAND tar -xvzf ${PROJ_THIRD_PARTY_DIR}/leveldb/${LEVELDB_VERSION}.tar.gz -C ${PROJ_THIRD_PARTY_UNZIP_DIR}
    RESULT_VARIABLE LEVELDB_SOURCE_UNZIP_SUCCESS
)

if(NOT "${LEVELDB_SOURCE_UNZIP_SUCCESS}" STREQUAL "0")
    message(FATAL_ERROR "unzip && patch tar failed -> ${LEVELDB_SOURCE_UNZIP_SUCCESS}")
endif()

include_directories(${LEVELDB_INSTALL_DIR})
ExternalProject_Add(
  leveldb_leveldb
  SOURCE_DIR       "${PROJ_THIRD_PARTY_UNZIP_DIR}/${LEVELDB_VERSION}"
  BUILD_BYPRODUCTS ${LEVELDB_LIBRARIES}
  UPDATE_COMMAND  ""
  CMAKE_ARGS       -DCMAKE_POSITION_INDEPENDENT_CODE=ON
		   -DLEVELDB_BUILD_BENCHMARKS=OFF
		   -DLEVELDB_BUILD_TESTS=OFF
       -DCMAKE_INSTALL_LIBDIR=lib
  		   -DCMAKE_INSTALL_PREFIX=${LEVELDB_INSTALL_DIR}
                   ${THIRD_PARTY_EXTRA_CMAKE_ARGS}
  BUILD_IN_SOURCE 1
)

message("LEVELDB_LIBRARIES = ${LEVELDB_LIBRARIES}")
add_library(leveldb STATIC IMPORTED GLOBAL)
set_property(TARGET leveldb PROPERTY IMPORTED_LOCATION ${LEVELDB_LIBRARIES})
add_dependencies(leveldb leveldb_leveldb)
